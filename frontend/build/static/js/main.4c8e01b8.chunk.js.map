{"version":3,"sources":["images/cloud.png","store.js","reducers/userReducers.js","constants/userConstants.js","reducers/fileReducers.js","constants/fileConstant.js","actions/userActions.js","components/Header.js","screens/LoginScreen.js","actions/fileAction.js","screens/UserDashboard.js","components/StudentButtons.js","screens/Students.js","screens/AddStudent.js","screens/Files.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","cartItemfromStorage","localStorage","getItem","JSON","parse","userInfofromStorage","shippingAddressfromStorage","reducer","combineReducers","userLogin","state","arguments","length","undefined","action","type","loading","userInfo","payload","error","sendEmail","emailLoading","emailInfo","emailError","updatePassword","passwordLoading","passwordInfo","passwordError","userRegister","userDetails","user","Object","objectSpread","userUpdateProfile","success","userList","users","userDelete","userUpdate","fileLists","files","initialState","cart","cartItems","shippingAddress","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","apply","login","email","password","batchCode","_ref","asyncToGenerator","_regeneratorRuntime","mark","_callee","dispatch","config","_yield$axios$post","data","wrap","_context","prev","next","headers","Content-Type","axios","post","sent","setItem","stringify","t0","response","message","stop","_x","this","Header","useDispatch","useSelector","console","log","isAdmin","react_default","a","createElement","className","react_router_dom","to","name","onClick","removeItem","document","location","href","LoginScreen","history","_useState","useState","_useState2","slicedToArray","SetEmail","_useState3","_useState4","SetPassword","_useState5","_useState6","SetBatchCode","useEffect","submitHandler","_ref2","LoginScreen_regeneratorRuntime","e","preventDefault","Fragment","onSubmit","for","placeholder","value","onChange","target","fileUpload","tags","folderName","fileAction_regeneratorRuntime","UserDashboard","setData","then","catch","map","item","class","moment","createdAt","calendar","download","src","width","height","StudentButtons","Student","components_StudentButtons","id","AddStudent","setName","setEmail","number","setNumber","_useState7","_useState8","setBatchCode","_useState9","_useState10","setPassword","mobile","_callee2","_yield$axios$post2","_context2","_x2","register","Files","setTags","setFiles","setFolderName","uploadFolderHandler","Files_regeneratorRuntime","formData","FormData","_","forEach","file","append","folderUploadHandler","App","token","components_Header","react_router","path","component","exact","reportWebVitals","onPerfEntry","Function","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","es","src_App","getElementById"],"mappings":"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","file":"static/js/main.4c8e01b8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cloud.633a01b2.png\";","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { userLoginReducers, userRegisterReducers, userDetailsReducers, userUpdateProfileReducers, userListReducers, userDeleteReducers, userUpdateReducers, sendEmailReducers, updatePasswordReducers, orderPendingDeleteReducers } from './reducers/userReducers'\r\nimport { filesListReducers } from './reducers/fileReducers'\r\n\r\n\r\nconst cartItemfromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\r\nconst userInfofromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\r\nconst shippingAddressfromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\nconst reducer = combineReducers({\r\n    userLogin: userLoginReducers,\r\n    sendEmail: sendEmailReducers,\r\n    updatePassword: updatePasswordReducers,\r\n    userRegister: userRegisterReducers,\r\n    userDetails: userDetailsReducers,\r\n    userUpdateProfile: userUpdateProfileReducers,\r\n    userList: userListReducers,\r\n    userDelete: userDeleteReducers,\r\n    userUpdate: userUpdateReducers,\r\n    fileLists: filesListReducers\r\n})\r\n\r\nconst initialState = {\r\n    cart: { cartItems: cartItemfromStorage, shippingAddress: shippingAddressfromStorage }, userLogin: { userInfo: userInfofromStorage }\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_DETAILS_RESET, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_LIST_RESET, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_RESET, USER_UPDATE_PROFILE_RESET, SEND_EMAIL_REQUEST, SEND_EMAIL_SUCCESS, SEND_EMAIL_FAIL, UPDATE_PASSWORD_REQUEST, UPDATE_PASSWORD_SUCCESS, UPDATE_PASSWORD_FAIL, DELETE_ORDER_REQUEST, DELETE_ORDER_SUCCESS, DELETE_ORDER_FAIL } from '../constants/userConstants'\r\n\r\n// USER LOGIN REDUCERS\r\nexport const userLoginReducers = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LOGOUT:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// USER REGISTER REDUCERS\r\nexport const userRegisterReducers = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// USER REGISTER REDUCERS\r\nexport const userDetailsReducers = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// USER REGISTER REDUCERS\r\nexport const userUpdateProfileReducers = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// USER REGISTER REDUCERS\r\nexport const userListReducers = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LIST_RESET:\r\n            return { users: [] }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// USER REGISTER REDUCERS\r\nexport const userDeleteReducers = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// USER REGISTER REDUCERS\r\nexport const userUpdateReducers = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_UPDATE_RESET:\r\n            return { user: {} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// SEND EMAIL CODE FOR  FORGOT PASSWORD REDUCERS\r\nexport const sendEmailReducers = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case SEND_EMAIL_REQUEST:\r\n            return { emailLoading: true }\r\n        case SEND_EMAIL_SUCCESS:\r\n            return { emailLoading: false, emailInfo: action.payload }\r\n        case SEND_EMAIL_FAIL:\r\n            return { emailLoading: false, emailError: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// UPDATE PASSSWORD REDUCERS\r\nexport const updatePasswordReducers = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_PASSWORD_REQUEST:\r\n            return { passwordLoading: true }\r\n        case UPDATE_PASSWORD_SUCCESS:\r\n            return { passwordLoading: false, passwordInfo: action.payload }\r\n        case UPDATE_PASSWORD_FAIL:\r\n            return { passwordLoading: false, passwordError: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// USER REGISTER REDUCERS\r\nexport const orderPendingDeleteReducers = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case DELETE_ORDER_REQUEST:\r\n            return { loading: true }\r\n        case DELETE_ORDER_SUCCESS:\r\n            return { orderLoading: false, orderInfo: action.payload }\r\n        case DELETE_ORDER_FAIL:\r\n            return { orderLoading: false, orderError: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n\r\nexport const SEND_EMAIL_REQUEST = 'SEND_EMAIL_REQUEST'\r\nexport const SEND_EMAIL_SUCCESS = 'SEND_EMAIL_SUCCESS'\r\nexport const SEND_EMAIL_FAIL = 'SEND_EMAIL_FAIL'\r\n\r\nexport const UPDATE_PASSWORD_REQUEST = 'UPDATE_PASSWORD_REQUEST'\r\nexport const UPDATE_PASSWORD_SUCCESS = 'UPDATE_PASSWORD_SUCCESS'\r\nexport const UPDATE_PASSWORD_FAIL = 'UPDATE_PASSWORD_FAIL'\r\n\r\nexport const DELETE_ORDER_REQUEST = 'DELETE_ORDER_REQUEST'\r\nexport const DELETE_ORDER_SUCCESS = 'DELETE_ORDER_SUCCESS'\r\nexport const DELETE_ORDER_FAIL = 'DELETE_ORDER_FAIL'\r\n\r\n","import { FILE_UPLOAD_REQUEST, FILE_UPLOAD_SUCCESS, FILE_UPLOAD_FAIL, FILE_LIST_REQUEST, FILE_LIST_SUCCESS, FILE_LIST_FAIL } from '../constants/fileConstant'\n\n// USER REGISTER REDUCERS\nexport const filesUploadReducers = (state = {}, action) => {\n    switch (action.type) {\n        case FILE_UPLOAD_REQUEST:\n            return { loading: true }\n        case FILE_UPLOAD_SUCCESS:\n            return { loading: false, files: action.payload }\n        case FILE_UPLOAD_FAIL:\n            return { loading: false, error: action.payload }\n        case FILE_UPLOAD_FAIL:\n            return {}\n        default:\n            return state\n    }\n}\n\nexport const filesListReducers = (state = {}, action) => {\n    switch (action.type) {\n        case FILE_LIST_REQUEST:\n            return { loading: true }\n        case FILE_LIST_SUCCESS:\n            return { loading: false, files: action.payload }\n        case FILE_LIST_FAIL:\n            return { loading: false, error: action.payload }\n        case FILE_LIST_FAIL:\n            return {}\n        default:\n            return state\n    }\n}","export const FILE_UPLOAD_REQUEST = 'FILE_UPLOAD_REQUEST'\nexport const FILE_UPLOAD_SUCCESS = 'FILE_UPLOAD_SUCCESS'\nexport const FILE_UPLOAD_FAIL = 'FILE_UPLOAD_FAIL'\n\nexport const FILE_LIST_REQUEST = 'FILE_LIST_REQUEST'\nexport const FILE_LIST_SUCCESS = 'FILE_LIST_SUCCESS'\nexport const FILE_LIST_FAIL = 'FILE_LIST_FAIL'","import axios from \"axios\";\r\nimport { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_DETAILS_RESET, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_LIST_RESET, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL, SEND_EMAIL_REQUEST, SEND_EMAIL_SUCCESS, SEND_EMAIL_FAIL, UPDATE_PASSWORD_REQUEST, UPDATE_PASSWORD_SUCCESS, UPDATE_PASSWORD_FAIL, DELETE_ORDER_REQUEST, DELETE_ORDER_SUCCESS, DELETE_ORDER_FAIL } from \"../constants/userConstants\";\r\n\r\nexport const login = (email, password, batchCode) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('http://157.245.252.197:3001/api/users/signin', { email, password, batchCode }, config)\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n    document.location.href = '/'\r\n}\r\n\r\nexport const register = (name, email, password, mobile, batchCode) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('http://157.245.252.197:3001/api/users', { name, email, password, mobile, batchCode }, config)\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/users/${id}`, config)\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/profile`, user, config)\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/users`, config)\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteUsers = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/users/${id}`, config)\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deletePendingOrderAction = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: DELETE_ORDER_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/users/orders/${id}`, config)\r\n\r\n        dispatch({\r\n            type: DELETE_ORDER_SUCCESS,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DELETE_ORDER_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUsers = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n        console.log(userInfo)\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/${user._id}`, user, config)\r\n\r\n        dispatch({ type: USER_UPDATE_SUCCESS })\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({ type: USER_DETAILS_RESET })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const sendEmailCode = (email) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: SEND_EMAIL_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/users/email-send', { email }, config)\r\n\r\n        dispatch({\r\n            type: SEND_EMAIL_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('emailDataInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: SEND_EMAIL_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const userUpdatePassword = (email, code, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: UPDATE_PASSWORD_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/users/changePassword', { email, code, password }, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_PASSWORD_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_PASSWORD_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}","import React from \"react\";\r\nimport { Route, Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout } from \"../actions/userActions\";\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  console.log(userInfo.isAdmin);\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout())\r\n  }\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <Link className=\"links\" to='/'><p className=\"logo\">Bringonn.coders</p></Link>\r\n\r\n      <nav className=\"main-nav\">\r\n        {userInfo && userInfo.isAdmin ? (\r\n          <ul className=\"main-nav-list\">\r\n            <Link className=\"links\" to='/students'><li>Students</li></Link>\r\n            <Link className=\"links\" to='/files'><li>Files</li></Link>\r\n            <li>Notes</li>\r\n            <li>Questions</li>\r\n            <li>Quiz</li>\r\n          </ul>\r\n        ) : (\r\n          <ul className=\"main-nav-list\">\r\n            <li>Try JS</li>\r\n            <li>Projects</li>\r\n            <li>Notes</li>\r\n            <li>Questions</li>\r\n            <li>Quiz</li>\r\n          </ul>\r\n        )}\r\n\r\n      </nav>\r\n\r\n      <p>Welcome, {userInfo.name} <span className=\"logout\" onClick={logoutHandler}>Logout</span></p>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login } from \"../actions/userActions\";\n\nconst LoginScreen = ({ location, history }) => {\n    const [email, SetEmail] = useState(\"\");\n    const [password, SetPassword] = useState(\"\");\n    const [batchCode, SetBatchCode] = useState(\"\");\n    const dispatch = useDispatch();\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { loading, error, userInfo } = userLogin;\n\n    useEffect(() => {\n        if (userInfo) {\n            document.location.href = '/'\n        }\n    }, [history, userInfo]);\n\n    const submitHandler = async (e) => {\n        e.preventDefault();\n        dispatch(login(email, password, batchCode));\n    };\n\n    return (\n        <>\n            {error && error.message}\n            {loading ? 'loading...' : (\n                <>\n                    <div className=\"background\">\n                        <div className=\"shape\"></div>\n                        <div className=\"shape\"></div>\n                    </div>\n                    <form className=\"login-form\" onSubmit={submitHandler}>\n                        <h3>Bringonn.Coders</h3>\n\n                        <label for=\"username\">Username</label>\n                        <input type=\"email\" placeholder=\"Email\" value={email}\n                            onChange={(e) => SetEmail(e.target.value)} />\n\n                        <label for=\"username\">Batch code</label>\n                        <input type=\"text\" placeholder=\"Enter batch code\" value={batchCode}\n                            onChange={(e) => SetBatchCode(e.target.value)} />\n\n                        <label for=\"password\">Password</label>\n                        <input type=\"password\" placeholder=\"Password\" value={password}\n                            onChange={(e) => SetPassword(e.target.value)} />\n\n                        <button>Log In</button>\n                    </form>\n                </>\n            )}\n\n        </>\n    )\n}\n\nexport default LoginScreen","import { FILE_UPLOAD_REQUEST, FILE_UPLOAD_SUCCESS, FILE_UPLOAD_FAIL, FILE_LIST_REQUEST, FILE_LIST_SUCCESS, FILE_LIST_FAIL } from '../constants/fileConstant'\nimport axios from 'axios'\n\nexport const fileUpload = (batchCode, tags, files, folderName) => async (dispatch) => {\n    try {\n        dispatch({\n            type: FILE_UPLOAD_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post('http://157.245.252.197:3001/api/files/uploadFolder', { batchCode, tags, files, folderName }, config)\n\n        dispatch({\n            type: FILE_UPLOAD_SUCCESS,\n            payload: data\n        })\n\n        document.location.href = '/'\n\n    } catch (error) {\n        dispatch({\n            type: FILE_UPLOAD_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const fileList = (batchCode) => async (dispatch) => {\n    try {\n        dispatch({\n            type: FILE_LIST_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post('http://157.245.252.197:3001/api/files', { batchCode }, config)\n\n        dispatch({\n            type: FILE_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: FILE_LIST_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}","import axios from 'axios';\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fileList } from \"../actions/fileAction\";\nimport moment from 'moment';\nimport download from '../images/cloud.png'\n\nconst UserDashboard = () => {\n    const [data, setData] = useState([]);\n    const userInfo = JSON.parse(localStorage.getItem('userInfo'))\n    useEffect(() => {\n        axios.post('http://157.245.252.197:3001/api/files', { batchCode: userInfo.batchCode })\n            .then(response => setData(response.data.data))\n\n            .catch(error => console.log(error));\n    }, []);\n\n    return (\n        <section className=\"download-section\">\n            {data.map(item => (\n                <div class=\"card\">\n                    <h1>\n                        <span>{moment(item.createdAt).calendar()}</span>\n                        <span class=\"language\">{item.tags}</span>\n                    </h1>\n\n                    <div class=\"files\">\n                        <a href={\"http://157.245.252.197:3001\" + item.files} class=\"download-link html\" download>{item.folderName}<img src={download} width=\"15\" height=\"15\" /></a>\n                    </div>\n                </div>\n            ))}\n        </section>\n    )\n}\n\nexport default UserDashboard","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst StudentButtons = () => {\n    return (\n        <div class=\"admin-buttons\">\n            <Link className=\"links\" to='/add-students'><li>Add Students</li></Link>\n        </div>\n    )\n}\n\nexport default StudentButtons","import React from 'react'\nimport StudentButtons from '../components/StudentButtons'\n\nconst Student = () => {\n    return (\n        <section class=\"admin-student\">\n            <StudentButtons />\n            <div class=\"admin-download-section\">\n                <div class=\"admin-card\">\n                    <table id=\"customers\">\n                        <tr>\n                            <th>Name</th>\n                            <th>Email</th>\n                            <th>Mobile</th>\n                        </tr>\n                        <tr>\n                            <td>Demo</td>\n                            <td>Demo</td>\n                            <td>Demo</td>\n                        </tr>\n                        <tr>\n                            <td>Demo</td>\n                            <td>Demo</td>\n                            <td>Demo</td>\n                        </tr>\n                        <tr>\n                            <td>Demo</td>\n                            <td>Demo</td>\n                            <td>Demo</td>\n                        </tr>\n                        <tr>\n                            <td>Demo</td>\n                            <td>Demo</td>\n                            <td>Demo</td>\n                        </tr>\n                        <tr>\n                            <td>Demo</td>\n                            <td>Demo</td>\n                            <td>Demo</td>\n                        </tr>\n                        <tr>\n                            <td>Demo</td>\n                            <td>Demo</td>\n                            <td>Demo</td>\n                        </tr>\n                    </table>\n                </div>\n            </div>\n\n        </section>\n    )\n}\n\nexport default Student","import React, { useState, useEffect } from 'react'\nimport StudentButtons from '../components/StudentButtons'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { register } from '../actions/userActions'\n\nconst AddStudent = ({ location, history }) => {\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [number, setNumber] = useState('')\n    const [batchCode, setBatchCode] = useState('')\n    const [password, setPassword] = useState('')\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n\n    }, [history])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(register(name, email, password, number, batchCode))\n    }\n    return (\n        <section class=\"admin-student\">\n            <StudentButtons />\n            <div class=\"admin-download-section\">\n                <div class=\"admin-card\">\n                    <form className='register-form' onSubmit={submitHandler}>\n                        <input type=\"text\" placeholder='Enter Name' value={name}\n                            onChange={(e) => setName(e.target.value)} />\n                        <input type=\"text\" placeholder='Enter Email' value={email}\n                            onChange={(e) => setEmail(e.target.value)} />\n                        <input type=\"text\" placeholder='Enter Number' value={number}\n                            onChange={(e) => setNumber(e.target.value)} />\n                        <input type=\"text\" placeholder='Enter Password' value={password}\n                            onChange={(e) => setPassword(e.target.value)} />\n                        <input type=\"text\" placeholder='Enter Batch Code' value={batchCode}\n                            onChange={(e) => setBatchCode(e.target.value)} />\n                        <button>SAVE</button>\n                    </form>\n                </div>\n            </div>\n\n        </section>\n    )\n}\n\nexport default AddStudent","import React, { useState } from 'react'\nimport axios from 'axios'\nimport _ from \"lodash\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fileUpload } from '../actions/fileAction';\n\nconst Files = () => {\n\n    const [batchCode, setBatchCode] = useState('')\n    const [tags, setTags] = useState('')\n    const [files, setFiles] = useState('')\n    const [folderName, setFolderName] = useState('')\n\n    const dispatch = useDispatch();\n\n    const uploadFolderHandler = async (e) => {\n        const formData = new FormData();\n        _.forEach(e.target.files, (file) => {\n            formData.append(\"files\", file);\n        });\n        try {\n            const config = {\n                headers: {\n                    \"Content-Type\": \"multipart/form-data\",\n                },\n            };\n            const { data } = await axios.post(\n                \"http://157.245.252.197:3001/api/upload\",\n                formData,\n                config\n            );\n\n            setFiles(data);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n\n    const folderUploadHandler = async (e) => {\n        e.preventDefault()\n        dispatch(fileUpload(batchCode, tags, files, folderName));\n\n    }\n\n    return (\n        <section className=\"file-upload-section\">\n            <h3>Folder upload</h3>\n            <div class=\"admin-card\">\n                <form onSubmit={folderUploadHandler}>\n                    <input type=\"text\" placeholder='Enter Batch Code' value={batchCode}\n                        onChange={(e) => setBatchCode(e.target.value)} />\n                    <input type=\"text\" placeholder='Enter Tags' value={tags}\n                        onChange={(e) => setTags(e.target.value)} />\n                    <input type=\"text\" placeholder='Enter Folder Name' value={folderName}\n                        onChange={(e) => setFolderName(e.target.value)} />\n                    <input type=\"file\" onChange={uploadFolderHandler} />\n                    <button>Upload</button>\n                </form>\n            </div>\n        </section>\n    )\n}\n\nexport default Files","import React from 'react'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport Header from './components/Header';\r\nimport LoginScreen from './screens/LoginScreen';\r\nimport UserDashboard from './screens/UserDashboard';\r\nimport Student from './screens/Students';\r\nimport AddStudent from './screens/AddStudent';\r\nimport Files from './screens/Files';\r\n\r\nconst App = () => {\r\n\r\n  const data = JSON.parse(localStorage.getItem('userInfo'))\r\n  console.log(data);\r\n  const login = data && data.token ? true : false\r\n  return (\r\n    <Router>\r\n      {login ? (\r\n        <>\r\n          <Header />\r\n          <Route path='/dashboard' component={UserDashboard} exact />\r\n          <Route path='/' component={UserDashboard} exact />\r\n          <Route path='/students' component={Student} exact />\r\n          <Route path='/add-students' component={AddStudent} exact />\r\n          <Route path='/files' component={Files} exact />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Route path='/' component={LoginScreen} exact />\r\n        </>\r\n      )}\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}